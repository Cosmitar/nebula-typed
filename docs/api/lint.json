[
  {
    "name": "Proton#update",
    "filePath": "src/core/Proton.js",
    "lines": [
      {
        "lineNumber": 164,
        "line": "  /**"
      },
      {
        "lineNumber": 165,
        "line": "   * Updates the particle system based on the delta passed."
      },
      {
        "lineNumber": 166,
        "line": "   *"
      },
      {
        "lineNumber": 167,
        "line": "   * @example"
      },
      {
        "lineNumber": 168,
        "line": "   * animate = timestamp => {"
      },
      {
        "lineNumber": 169,
        "line": "   *   threeRenderer.render(threeScene, threeCamera);"
      },
      {
        "lineNumber": 170,
        "line": "   *   proton.update();"
      },
      {
        "lineNumber": 171,
        "line": "   *   requestAnimationFrame(animate);"
      },
      {
        "lineNumber": 172,
        "line": "   * }"
      },
      {
        "lineNumber": 173,
        "line": "   * animate();"
      },
      {
        "lineNumber": 174,
        "line": "   *"
      },
      {
        "lineNumber": 175,
        "line": "   * @param {number}"
      },
      {
        "lineNumber": 176,
        "line": "   * @return {Promise}"
      },
      {
        "lineNumber": 177,
        "line": "   */"
      },
      {
        "lineNumber": 178,
        "line": "  update(delta = DEFAULT_PROTON_DELTA) {"
      }
    ],
    "codeParams": [
      "delta"
    ],
    "docParams": []
  },
  {
    "name": "log",
    "filePath": "src/debug/log.js",
    "lines": [
      {
        "lineNumber": 0,
        "line": "/**"
      },
      {
        "lineNumber": 1,
        "line": " * You can use this emit particles."
      },
      {
        "lineNumber": 2,
        "line": " *"
      },
      {
        "lineNumber": 3,
        "line": " * This method will console.log the fixed number of your info  in updata or requestAnimationFrame"
      },
      {
        "lineNumber": 4,
        "line": " *"
      },
      {
        "lineNumber": 5,
        "line": " * use like this log('+12',mc); log 12 times"
      },
      {
        "lineNumber": 6,
        "line": " *"
      },
      {
        "lineNumber": 7,
        "line": " * @class Log"
      },
      {
        "lineNumber": 8,
        "line": " * @constructor"
      },
      {
        "lineNumber": 9,
        "line": " * @param {*} logInfo;"
      },
      {
        "lineNumber": 10,
        "line": " */"
      },
      {
        "lineNumber": 11,
        "line": "export default function() {"
      }
    ],
    "codeParams": [],
    "docParams": [
      "logInfo;"
    ]
  },
  {
    "name": "BehaviourEmitter#addSelfBehaviour",
    "filePath": "src/emitter/BehaviourEmitter.js",
    "lines": [
      {
        "lineNumber": 17,
        "line": "  /**"
      },
      {
        "lineNumber": 18,
        "line": "   * add the Behaviour to emitter;"
      },
      {
        "lineNumber": 19,
        "line": "   *"
      },
      {
        "lineNumber": 20,
        "line": "   * you can use Behaviours array:emitter.addSelfBehaviour(Behaviour1,Behaviour2,Behaviour3);"
      },
      {
        "lineNumber": 21,
        "line": "   * @method addSelfBehaviour"
      },
      {
        "lineNumber": 22,
        "line": "   * @param {Proton.Behaviour} behaviour like this new Proton.Color('random')"
      },
      {
        "lineNumber": 23,
        "line": "   */"
      },
      {
        "lineNumber": 24,
        "line": "  addSelfBehaviour() {"
      }
    ],
    "codeParams": [],
    "docParams": [
      "behaviour"
    ]
  },
  {
    "name": "Emitter#setupParticle",
    "filePath": "src/emitter/Emitter.js",
    "lines": [
      {
        "lineNumber": 347,
        "line": "  /**"
      },
      {
        "lineNumber": 348,
        "line": "   * Sets up a particle by running all initializers on it and setting its behaviours."
      },
      {
        "lineNumber": 349,
        "line": "   * Also adds the particle to this.particles."
      },
      {
        "lineNumber": 350,
        "line": "   *"
      },
      {
        "lineNumber": 351,
        "line": "   * TODO This method is only ever called from createParticle and never with arguments"
      },
      {
        "lineNumber": 352,
        "line": "   * so it's safe to remove the arguments."
      },
      {
        "lineNumber": 353,
        "line": "   *"
      },
      {
        "lineNumber": 354,
        "line": "   * @param {Particle} particle - The particle to setup"
      },
      {
        "lineNumber": 355,
        "line": "   * @return void"
      },
      {
        "lineNumber": 356,
        "line": "   */"
      },
      {
        "lineNumber": 357,
        "line": "  setupParticle(particle, initialize, behaviour) {"
      }
    ],
    "codeParams": [
      "particle",
      "initialize",
      "behaviour"
    ],
    "docParams": [
      "particle"
    ]
  }
]