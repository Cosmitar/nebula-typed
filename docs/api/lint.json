[
  {
    "name": "BehaviourEmitter#addSelfBehaviour",
    "filePath": "src/emitter/BehaviourEmitter.js",
    "lines": [
      {
        "lineNumber": 24,
        "line": "  /**"
      },
      {
        "lineNumber": 25,
        "line": "   * add the Behaviour to emitter;"
      },
      {
        "lineNumber": 26,
        "line": "   *"
      },
      {
        "lineNumber": 27,
        "line": "   * you can use Behaviours array:emitter.addSelfBehaviour(Behaviour1,Behaviour2,Behaviour3);"
      },
      {
        "lineNumber": 28,
        "line": "   * @method addSelfBehaviour"
      },
      {
        "lineNumber": 29,
        "line": "   * @param {Proton.Behaviour} behaviour like this new Proton.Color('random')"
      },
      {
        "lineNumber": 30,
        "line": "   */"
      },
      {
        "lineNumber": 31,
        "line": "  addSelfBehaviour() {"
      }
    ],
    "codeParams": [],
    "docParams": [
      "behaviour"
    ]
  },
  {
    "name": "Emitter#setupParticle",
    "filePath": "src/emitter/Emitter.js",
    "lines": [
      {
        "lineNumber": 354,
        "line": "  /**"
      },
      {
        "lineNumber": 355,
        "line": "   * Sets up a particle by running all initializers on it and setting its behaviours."
      },
      {
        "lineNumber": 356,
        "line": "   * Also adds the particle to this.particles."
      },
      {
        "lineNumber": 357,
        "line": "   *"
      },
      {
        "lineNumber": 358,
        "line": "   * TODO This method is only ever called from createParticle and never with arguments"
      },
      {
        "lineNumber": 359,
        "line": "   * so it's safe to remove the arguments."
      },
      {
        "lineNumber": 360,
        "line": "   *"
      },
      {
        "lineNumber": 361,
        "line": "   * @param {Particle} particle - The particle to setup"
      },
      {
        "lineNumber": 362,
        "line": "   * @return void"
      },
      {
        "lineNumber": 363,
        "line": "   */"
      },
      {
        "lineNumber": 364,
        "line": "  setupParticle(particle, initialize, behaviour) {"
      }
    ],
    "codeParams": [
      "particle",
      "initialize",
      "behaviour"
    ],
    "docParams": [
      "particle"
    ]
  },
  {
    "name": "Position#reset",
    "filePath": "src/initializer/Position.js",
    "lines": [
      {
        "lineNumber": 24,
        "line": "  /**"
      },
      {
        "lineNumber": 25,
        "line": "   * Resets the initializer properties."
      },
      {
        "lineNumber": 26,
        "line": "   * Clears all previously set zones and resets the zones according to args passed."
      },
      {
        "lineNumber": 27,
        "line": "   *"
      },
      {
        "lineNumber": 28,
        "line": "   * @param {Zone|array<Zone>} zones - The zones to use to calculate particle starting position."
      },
      {
        "lineNumber": 29,
        "line": "   * @return void"
      },
      {
        "lineNumber": 30,
        "line": "   */"
      },
      {
        "lineNumber": 31,
        "line": "  reset() {"
      }
    ],
    "codeParams": [],
    "docParams": [
      "zones"
    ]
  },
  {
    "name": "Position#addZone",
    "filePath": "src/initializer/Position.js",
    "lines": [
      {
        "lineNumber": 44,
        "line": "  /**"
      },
      {
        "lineNumber": 45,
        "line": "   * Adds a zone or zones to this.zones."
      },
      {
        "lineNumber": 46,
        "line": "   *"
      },
      {
        "lineNumber": 47,
        "line": "   * @param {Zone|array<Zone>} zones - The zones to use to calculate particle starting position."
      },
      {
        "lineNumber": 48,
        "line": "   * @return void"
      },
      {
        "lineNumber": 49,
        "line": "   */"
      },
      {
        "lineNumber": 50,
        "line": "  addZone() {"
      }
    ],
    "codeParams": [],
    "docParams": [
      "zones"
    ]
  }
]